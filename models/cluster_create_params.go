// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ClusterCreateParams cluster create params
// swagger:model cluster-create-params
type ClusterCreateParams struct {

	// description
	Description string `json:"description,omitempty"`

	// master nodes
	MasterNodes []strfmt.UUID `json:"master_nodes" gorm:"type:varchar(64)[]"`

	// name
	// Required: true
	Name *string `json:"name"`

	// worker nodes
	WorkerNodes []strfmt.UUID `json:"worker_nodes" gorm:"type:varchar(64)[]"`
}

// Validate validates this cluster create params
func (m *ClusterCreateParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMasterNodes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateWorkerNodes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ClusterCreateParams) validateMasterNodes(formats strfmt.Registry) error {

	if swag.IsZero(m.MasterNodes) { // not required
		return nil
	}

	for i := 0; i < len(m.MasterNodes); i++ {

		if err := validate.FormatOf("master_nodes"+"."+strconv.Itoa(i), "body", "uuid", m.MasterNodes[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

func (m *ClusterCreateParams) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *ClusterCreateParams) validateWorkerNodes(formats strfmt.Registry) error {

	if swag.IsZero(m.WorkerNodes) { // not required
		return nil
	}

	for i := 0; i < len(m.WorkerNodes); i++ {

		if err := validate.FormatOf("worker_nodes"+"."+strconv.Itoa(i), "body", "uuid", m.WorkerNodes[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *ClusterCreateParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterCreateParams) UnmarshalBinary(b []byte) error {
	var res ClusterCreateParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
