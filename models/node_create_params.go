// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NodeCreateParams node create params
//
// swagger:model node-create-params
type NodeCreateParams struct {

	// namespace
	// Required: true
	Namespace *string `json:"namespace"`

	// node id
	// Required: true
	// Format: uuid
	NodeID *strfmt.UUID `json:"node_id"`
}

// Validate validates this node create params
func (m *NodeCreateParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNamespace(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodeID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NodeCreateParams) validateNamespace(formats strfmt.Registry) error {

	if err := validate.Required("namespace", "body", m.Namespace); err != nil {
		return err
	}

	return nil
}

func (m *NodeCreateParams) validateNodeID(formats strfmt.Registry) error {

	if err := validate.Required("node_id", "body", m.NodeID); err != nil {
		return err
	}

	if err := validate.FormatOf("node_id", "body", "uuid", m.NodeID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NodeCreateParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NodeCreateParams) UnmarshalBinary(b []byte) error {
	var res NodeCreateParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
