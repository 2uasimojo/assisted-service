// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/filanov/bm-inventory/models"
)

// InstallClusterReader is a Reader for the InstallCluster structure.
type InstallClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstallClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInstallClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInstallClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInstallClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewInstallClusterConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInstallClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInstallClusterOK creates a InstallClusterOK with default headers values
func NewInstallClusterOK() *InstallClusterOK {
	return &InstallClusterOK{}
}

/*InstallClusterOK handles this case with default header values.

Installing cluster
*/
type InstallClusterOK struct {
	Payload *models.Cluster
}

func (o *InstallClusterOK) Error() string {
	return fmt.Sprintf("[POST /clusters/{clusterId}/actions/install][%d] installClusterOK  %+v", 200, o.Payload)
}

func (o *InstallClusterOK) GetPayload() *models.Cluster {
	return o.Payload
}

func (o *InstallClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Cluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallClusterBadRequest creates a InstallClusterBadRequest with default headers values
func NewInstallClusterBadRequest() *InstallClusterBadRequest {
	return &InstallClusterBadRequest{}
}

/*InstallClusterBadRequest handles this case with default header values.

Invalid input
*/
type InstallClusterBadRequest struct {
}

func (o *InstallClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /clusters/{clusterId}/actions/install][%d] installClusterBadRequest ", 400)
}

func (o *InstallClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallClusterNotFound creates a InstallClusterNotFound with default headers values
func NewInstallClusterNotFound() *InstallClusterNotFound {
	return &InstallClusterNotFound{}
}

/*InstallClusterNotFound handles this case with default header values.

Cluster not found
*/
type InstallClusterNotFound struct {
}

func (o *InstallClusterNotFound) Error() string {
	return fmt.Sprintf("[POST /clusters/{clusterId}/actions/install][%d] installClusterNotFound ", 404)
}

func (o *InstallClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallClusterConflict creates a InstallClusterConflict with default headers values
func NewInstallClusterConflict() *InstallClusterConflict {
	return &InstallClusterConflict{}
}

/*InstallClusterConflict handles this case with default header values.

Invalid state
*/
type InstallClusterConflict struct {
}

func (o *InstallClusterConflict) Error() string {
	return fmt.Sprintf("[POST /clusters/{clusterId}/actions/install][%d] installClusterConflict ", 409)
}

func (o *InstallClusterConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInstallClusterInternalServerError creates a InstallClusterInternalServerError with default headers values
func NewInstallClusterInternalServerError() *InstallClusterInternalServerError {
	return &InstallClusterInternalServerError{}
}

/*InstallClusterInternalServerError handles this case with default header values.

Internal server error
*/
type InstallClusterInternalServerError struct {
}

func (o *InstallClusterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /clusters/{clusterId}/actions/install][%d] installClusterInternalServerError ", 500)
}

func (o *InstallClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
