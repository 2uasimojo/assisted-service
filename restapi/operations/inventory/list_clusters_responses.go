// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/filanov/bm-inventory/models"
)

// ListClustersOKCode is the HTTP code returned for type ListClustersOK
const ListClustersOKCode int = 200

/*ListClustersOK Cluster list

swagger:response listClustersOK
*/
type ListClustersOK struct {

	/*
	  In: Body
	*/
	Payload models.ClusterList `json:"body,omitempty"`
}

// NewListClustersOK creates ListClustersOK with default headers values
func NewListClustersOK() *ListClustersOK {

	return &ListClustersOK{}
}

// WithPayload adds the payload to the list clusters o k response
func (o *ListClustersOK) WithPayload(payload models.ClusterList) *ListClustersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list clusters o k response
func (o *ListClustersOK) SetPayload(payload models.ClusterList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListClustersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.ClusterList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListClustersInternalServerErrorCode is the HTTP code returned for type ListClustersInternalServerError
const ListClustersInternalServerErrorCode int = 500

/*ListClustersInternalServerError Internal server error

swagger:response listClustersInternalServerError
*/
type ListClustersInternalServerError struct {
}

// NewListClustersInternalServerError creates ListClustersInternalServerError with default headers values
func NewListClustersInternalServerError() *ListClustersInternalServerError {

	return &ListClustersInternalServerError{}
}

// WriteResponse to the client
func (o *ListClustersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
